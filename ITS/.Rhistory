labs(title = "A. Bacteria/archaea")+
theme(legend.position="bottom",
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1), face="bold"),
axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"),
legend.text=element_text(size=12),
legend.title = element_blank(),
legend.spacing.x = unit(0.05, 'cm'))
pat.pcoa
# PCoA Plot by site
pat.pcoa <- ggplot(data = mapPat, aes(x=ax1.scores, y=ax2.scores))+
theme_bw()+
geom_point(data = mapPat, aes(x = ax1.scores, y = ax2.scores,shape=Treatment, color=Treatment),size=3, alpha=0.8)+
scale_shape_manual(labels = c("Control", "Water withholding", "Nutrient addition"), values = c(5, 16, 17))+
scale_colour_manual(labels = c("Control", "Water withholding", "Nutrient addition"),values=c("#CC6677", "#DDCC77","#117733"))+
scale_x_continuous(name=paste("PCoA1: ",round(ax1,3)*100,"% var. explained", sep=""))+
scale_y_continuous(name=paste("PCoA2: ",round(ax2,3)*100,"% var. explained", sep=""))+
coord_fixed() +
labs(title = "A. Bacteria/archaea")+
theme(legend.position="bottom",
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1), face="bold"),
axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"),
legend.text=element_text(size=12),
legend.title = element_blank(),
legend.spacing.x = unit(0.05, 'cm'))
pat.pcoa
# PCoA Plot by site
pat.pcoa <- ggplot(data = mapPat, aes(x=ax1.scores, y=ax2.scores))+
theme_bw()+
geom_point(data = mapPat, aes(x = ax1.scores, y = ax2.scores,shape=Treatment, color=Treatment),size=5, alpha=0.8)+
scale_shape_manual(labels = c("Control", "Water withholding", "Nutrient addition"), values = c(5, 16, 17))+
scale_colour_manual(labels = c("Control", "Water withholding", "Nutrient addition"),values=c("#CC6677", "#DDCC77","#117733"))+
scale_x_continuous(name=paste("PCoA1: ",round(ax1,3)*100,"% var. explained", sep=""))+
scale_y_continuous(name=paste("PCoA2: ",round(ax2,3)*100,"% var. explained", sep=""))+
coord_fixed() +
labs(title = "A. Bacteria/archaea")+
theme(legend.position="bottom",
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1), face="bold"),
axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"),
legend.text=element_text(size=12),
legend.title = element_blank(),
legend.spacing.x = unit(0.05, 'cm'))
pat.pcoa
# PCoA Plot by site
pat.pcoa <- ggplot(data = mapPat, aes(x=ax1.scores, y=ax2.scores))+
theme_bw()+
geom_point(data = mapPat, aes(x = ax1.scores, y = ax2.scores,shape=Treatment, color=Treatment),size=5, alpha=0.8)+
scale_shape_manual(labels = c("Control", "Water withholding", "Nutrient addition"), values = c(18, 16, 17))+
scale_colour_manual(labels = c("Control", "Water withholding", "Nutrient addition"),values=c("#CC6677", "#DDCC77","#117733"))+
scale_x_continuous(name=paste("PCoA1: ",round(ax1,3)*100,"% var. explained", sep=""))+
scale_y_continuous(name=paste("PCoA2: ",round(ax2,3)*100,"% var. explained", sep=""))+
coord_fixed() +
labs(title = "A. Bacteria/archaea")+
theme(legend.position="bottom",
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1), face="bold"),
axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"),
legend.text=element_text(size=12),
legend.title = element_blank(),
legend.spacing.x = unit(0.05, 'cm'))
pat.pcoa
# PCoA Plot by site
pat.pcoa <- ggplot(data = mapPat, aes(x=ax1.scores, y=ax2.scores))+
theme_bw()+
geom_point(data = mapPat, aes(x = ax1.scores, y = ax2.scores,shape=Treatment, color=Treatment),size=5, alpha=0.8)+
scale_shape_manual(labels = c("Control", "Water withholding", "Nutrient addition"), values = c(16, 17, 18))+
scale_colour_manual(labels = c("Control", "Water withholding", "Nutrient addition"),values=c("#CC6677", "#DDCC77","#117733"))+
scale_x_continuous(name=paste("PCoA1: ",round(ax1,3)*100,"% var. explained", sep=""))+
scale_y_continuous(name=paste("PCoA2: ",round(ax2,3)*100,"% var. explained", sep=""))+
coord_fixed() +
labs(title = "A. Bacteria/archaea")+
theme(legend.position="bottom",
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1), face="bold"),
axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"),
legend.text=element_text(size=12),
legend.title = element_blank(),
legend.spacing.x = unit(0.05, 'cm'))
pat.pcoa
# PCoA Plot by site
pat.pcoa <- ggplot(data = mapPat, aes(x=ax1.scores, y=ax2.scores))+
theme_bw()+
geom_point(data = mapPat, aes(x = ax1.scores, y = ax2.scores,shape=Treatment, color=Treatment),size=5, alpha=0.8)+
scale_shape_manual(labels = c("Control", "Water withholding", "Nutrient addition"), values = c(16, 18, 17))+
scale_colour_manual(labels = c("Control", "Water withholding", "Nutrient addition"),values=c("#CC6677", "#DDCC77","#117733"))+
scale_x_continuous(name=paste("PCoA1: ",round(ax1,3)*100,"% var. explained", sep=""))+
scale_y_continuous(name=paste("PCoA2: ",round(ax2,3)*100,"% var. explained", sep=""))+
coord_fixed() +
labs(title = "A. Bacteria/archaea")+
theme(legend.position="bottom",
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1), face="bold"),
axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"),
legend.text=element_text(size=12),
legend.title = element_blank(),
legend.spacing.x = unit(0.05, 'cm'))
pat.pcoa
# PCoA Plot by site
pat.pcoa <- ggplot(data = mapPat, aes(x=ax1.scores, y=ax2.scores))+
theme_bw()+
geom_point(data = mapPat, aes(x = ax1.scores, y = ax2.scores,shape=Treatment, color=Treatment),size=5, alpha=0.8)+
scale_shape_manual(labels = c("Control", "Water withholding", "Nutrient addition"), values = c(16, 15, 17))+
scale_colour_manual(labels = c("Control", "Water withholding", "Nutrient addition"),values=c("#CC6677", "#DDCC77","#117733"))+
scale_x_continuous(name=paste("PCoA1: ",round(ax1,3)*100,"% var. explained", sep=""))+
scale_y_continuous(name=paste("PCoA2: ",round(ax2,3)*100,"% var. explained", sep=""))+
coord_fixed() +
labs(title = "A. Bacteria/archaea")+
theme(legend.position="bottom",
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1), face="bold"),
axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"),
legend.text=element_text(size=12),
legend.title = element_blank(),
legend.spacing.x = unit(0.05, 'cm'))
pat.pcoa
# PCoA Plot by site
pat.pcoa.its.bc <- ggplot(data = mapPat.its.bc, aes(x=ax1.scores.its.bc, y=ax2.scores.its.bc))+
theme_bw()+
geom_point(data = mapPat.its.bc, aes(x = ax1.scores.its.bc, y = ax2.scores.its.bc, shape=Treatment, color=Treatment),size=5, alpha=0.5)+
scale_shape_manual(labels = c("Control", "Water withholding", "Nutrient addition"), values = c(16, 15, 17))+
scale_colour_manual(labels = c("Control", "Water withholding", "Nutrient addition"),values=c("#CC6677", "#DDCC77","#117733"))+
scale_x_continuous(name=paste("PCoA1: ",round(ax1,3)*100,"% var. explained", sep=""))+
scale_y_continuous(name=paste("PCoA2: ",round(ax2,3)*100,"% var. explained", sep=""))+
coord_fixed() +
labs(title = "A. Bacteria/archaea")+
theme(legend.position="bottom",
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1), face="bold"),
axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"),
legend.text=element_text(size=12),
legend.title = element_blank(),
legend.spacing.x = unit(0.05, 'cm'))
setwd('/Users/arifinabintarti/Documents/BioRxiv_Seed_Microbiome_2020/ITS/')
wd <- print(getwd())
otu.its.pat <- read.table('04022020_pat.OpenRef_OTU_table_rare.txt', sep='\t', header=T, row.names = 1)
colnames(otu.its.pat)
#write.csv(taxonomy.rare.pat, file = "taxonomy.rare.pat.csv")
dim(otu.its.pat)
plant.its.data = read.csv("planthealthpat.its.csv", header=T)
# checking the otu table
sort(colSums(otu.its.pat, na.rm = FALSE, dims = 1), decreasing = TRUE)
head(sort(rowSums(otu.its.pat, na.rm = FALSE, dims = 1), decreasing = FALSE))
rarecurve(t(otu.its.pat), step = 20, col = "blue", cex = 0.6) #produce the rarefaction curve
# load the map
map.pat.its <- plant.its.data
# 1. CALCULATE BETA DIVERSITY (PCoA PLOT) FOR Fungi
# dissimilarity indices for community ecologist to make a distance structure (Jaccard distance between samples)
otu.its.pa <- 1*(otu.its.pat>0)
otu_its.dist <- vegdist(t(otu.its.pa), method='jaccard',binary = T)
# CMD/classical multidimensional scaling (MDS) of a data matrix. Also known as principal coordinates analysis
otu_its_pcoa <- cmdscale(otu_its.dist, eig=T)
#env <- map[,c(11:22, 24:36)]
# scores of PC1 and PC2
ax1.scores.its=otu_its_pcoa$points[,1]
ax2.scores.its=otu_its_pcoa$points[,2]
#env_fit <- envfit(otu_pcoa, env, na.rm=TRUE)
# calculate percent variance explained, then add to plot
ax1.its <- otu_its_pcoa$eig[1]/sum(otu_its_pcoa$eig)
ax2.its <- otu_its_pcoa$eig[2]/sum(otu_its_pcoa$eig)
map.its=cbind(map.pat.its,ax1.scores.its,ax2.scores.its)
# PCoA Plot by site
its.pcoa <- ggplot(data = map.its, aes(x=ax1.scores.its, y=ax2.scores.its))+
theme_bw()+
geom_point(data = map.its, aes(x = ax1.scores.its, y = ax2.scores.its, color=Treatment),size=5,shape=20, alpha=0.8)+
scale_colour_manual(labels = c("Control", "Water withholding", "Nutrient addition"),values=c("#CC6677", "#DDCC77","#117733"))+
scale_x_continuous(name=paste("PCoA1: ",round(ax1.its,3)*100,"% var. explained", sep=""))+
scale_y_continuous(name=paste("PCoA2: ",round(ax2.its,3)*100,"% var. explained", sep=""))+
coord_fixed() +
labs(title = "B. Fungi")+
theme(legend.position="bottom",
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1), face="bold"),
axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"),
legend.text=element_text(size=12),
legend.title = element_blank(),
legend.spacing.x = unit(0.05, 'cm'))
its.pcoa
# PCoA Plot by site
its.pcoa <- ggplot(data = map.its, aes(x=ax1.scores.its, y=ax2.scores.its))+
theme_bw()+
geom_point(data = map.its, aes(x = ax1.scores.its, y = ax2.scores.its, color=Treatment),size=5, alpha=0.8)+
scale_shape_manual(labels = c("Control", "Water withholding", "Nutrient addition"), values = c(16, 15, 17))+
scale_colour_manual(labels = c("Control", "Water withholding", "Nutrient addition"),values=c("#CC6677", "#DDCC77","#117733"))+
scale_x_continuous(name=paste("PCoA1: ",round(ax1.its,3)*100,"% var. explained", sep=""))+
scale_y_continuous(name=paste("PCoA2: ",round(ax2.its,3)*100,"% var. explained", sep=""))+
coord_fixed() +
labs(title = "B. Fungi")+
theme(legend.position="bottom",
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1), face="bold"),
axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"),
legend.text=element_text(size=12),
legend.title = element_blank(),
legend.spacing.x = unit(0.05, 'cm'))
its.pcoa
# 1. CALCULATE BETA DIVERSITY (PCoA PLOT) FOR Fungi
# dissimilarity indices for community ecologist to make a distance structure (Jaccard distance between samples)
otu.its.pa <- 1*(otu.its.pat>0)
otu_its.dist <- vegdist(t(otu.its.pa), method='jaccard',binary = T)
# CMD/classical multidimensional scaling (MDS) of a data matrix. Also known as principal coordinates analysis
otu_its_pcoa <- cmdscale(otu_its.dist, eig=T)
#env <- map[,c(11:22, 24:36)]
# scores of PC1 and PC2
ax1.scores.its=otu_its_pcoa$points[,1]
ax2.scores.its=otu_its_pcoa$points[,2]
#env_fit <- envfit(otu_pcoa, env, na.rm=TRUE)
# calculate percent variance explained, then add to plot
ax1.its <- otu_its_pcoa$eig[1]/sum(otu_its_pcoa$eig)
ax2.its <- otu_its_pcoa$eig[2]/sum(otu_its_pcoa$eig)
map.its=cbind(map.pat.its,ax1.scores.its,ax2.scores.its)
# PCoA Plot by site
its.pcoa <- ggplot(data = map.its, aes(x=ax1.scores.its, y=ax2.scores.its))+
theme_bw()+
geom_point(data = map.its, aes(x = ax1.scores.its, y = ax2.scores.its, color=Treatment, shape=Treatment),size=5, alpha=0.8)+
scale_shape_manual(labels = c("Control", "Water withholding", "Nutrient addition"), values = c(16, 15, 17))+
scale_colour_manual(labels = c("Control", "Water withholding", "Nutrient addition"),values=c("#CC6677", "#DDCC77","#117733"))+
scale_x_continuous(name=paste("PCoA1: ",round(ax1.its,3)*100,"% var. explained", sep=""))+
scale_y_continuous(name=paste("PCoA2: ",round(ax2.its,3)*100,"% var. explained", sep=""))+
coord_fixed() +
labs(title = "B. Fungi")+
theme(legend.position="bottom",
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1), face="bold"),
axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"),
legend.text=element_text(size=12),
legend.title = element_blank(),
legend.spacing.x = unit(0.05, 'cm'))
its.pcoa
# PCoA Plot by site
its.pcoa <- ggplot(data = map.its, aes(x=ax1.scores.its, y=ax2.scores.its))+
theme_bw()+
geom_point(data = map.its, aes(x = ax1.scores.its, y = ax2.scores.its, color=Treatment, shape=Treatment),size=5, alpha=0.5)+
scale_shape_manual(labels = c("Control", "Water withholding", "Nutrient addition"), values = c(16, 15, 17))+
scale_colour_manual(labels = c("Control", "Water withholding", "Nutrient addition"),values=c("#CC6677", "#DDCC77","#117733"))+
scale_x_continuous(name=paste("PCoA1: ",round(ax1.its,3)*100,"% var. explained", sep=""))+
scale_y_continuous(name=paste("PCoA2: ",round(ax2.its,3)*100,"% var. explained", sep=""))+
coord_fixed() +
labs(title = "B. Fungi")+
theme(legend.position="bottom",
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1), face="bold"),
axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"),
legend.text=element_text(size=12),
legend.title = element_blank(),
legend.spacing.x = unit(0.05, 'cm'))
its.pcoa
# PCoA Plot by site
its.pcoa <- ggplot(data = map.its, aes(x=ax1.scores.its, y=ax2.scores.its))+
theme_bw()+
geom_point(data = map.its, aes(x = ax1.scores.its, y = ax2.scores.its, color=Treatment, shape=Treatment),size=5, alpha=0.8)+
scale_shape_manual(labels = c("Control", "Water withholding", "Nutrient addition"), values = c(16, 15, 17))+
scale_colour_manual(labels = c("Control", "Water withholding", "Nutrient addition"),values=c("#CC6677", "#DDCC77","#117733"))+
scale_x_continuous(name=paste("PCoA1: ",round(ax1.its,3)*100,"% var. explained", sep=""))+
scale_y_continuous(name=paste("PCoA2: ",round(ax2.its,3)*100,"% var. explained", sep=""))+
coord_fixed() +
labs(title = "B. Fungi")+
theme(legend.position="bottom",
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1), face="bold"),
axis.text=element_text(size=10),
axis.title=element_text(size=12,face="bold"),
legend.text=element_text(size=12),
legend.title = element_blank(),
legend.spacing.x = unit(0.05, 'cm'))
its.pcoa
plot <- ggarrange(pat.pcoa, its.pcoa,common.legend=T, legend="bottom",nrow=1, ncol=2, align = "h")
plot
ggsave("Fig.4 Bacteria and fungi_PCoAplot.pat.tiff",
plot, device = "tiff",
width = 6.5, height = 3.5,
units= "in", dpi = 600)
phyl.pat.obj
###create dataframe from phyloseq object
df.bac.genus <- data.table(psmelt(bac.ra))
dim(df.bac.genus)
###convert genus to character vector from a factor
df.bac.genus$Genus <- as.character(df.bac.genus$Genus)
###group dataframe by Phylum, calculate median rel. abundance
mean.relabund.genus <- df.bac.genus[, mean:=mean(Abundance), by ="Genus"]
df.bac <- psmelt(bac.ra) %>%
group_by(Sample, Treatment, Genus) %>%
summarize(Mean = mean(Abundance)) %>%
arrange(-Mean)
df.bac$Genus <- as.character(df.bac$Genus)
View(df.bac)
##checking the total genus abundance per sample
tot.genus.abundance <- df.bac.genus %>%
group_by(Sample) %>%
summarise(tot.abund=sum(Abundance))
tot.genus.abundance
df.bac.genus %>%
group_by(Treatment) %>%
summarise(mean(Mean)))
df.bac.genus %>%
group_by(Treatment) %>%
summarise(mean(Mean))
df.bac %>%
group_by(Treatment) %>%
summarise(mean(Mean))
View(df.bac)
df.bac %>%
group_by(Treatment, Genus) %>%
summarise(mean(Mean))
df.bac %>%
group_by(Treatment, Genus) %>%
summarise(sum(Mean))
###create dataframe from phyloseq object
df.bac.genus <- data.table(psmelt(bac.ra))
dim(df.bac.genus)
###convert genus to character vector from a factor
df.bac.genus$Genus <- as.character(df.bac.genus$Genus)
###group dataframe by Phylum, calculate median rel. abundance
mean.relabund.genus <- df.bac.genus[, mean:=mean(Abundance), by ="Genus"]
mean.relabund.genus
mean.relabund.genus
##checking the total genus abundance per sample
tot.genus.abundance <- df.bac.genus %>%
group_by(Sample) %>%
summarise(tot.abund=sum(Abundance))
tot.genus.abundance
df.bac <- psmelt(bac.ra) %>%
group_by(Sample, Treatment, Genus) %>%
summarize(Mean = mean(Abundance)) %>%
arrange(-Mean)
df.bac$Genus <- as.character(df.bac$Genus)
df.bac %>%
group_by(Sample) %>%
summarise(sum(Mean))
df.bac %>%
group_by(Treatment) %>%
summarise(sum(Mean))
df.bac %>%
group_by(Treatment, Genus) %>%
summarise(sum(Mean))
bac.ra
###create dataframe from phyloseq object
df.bac.genus <- data.table(psmelt(bac.ra))
dim(df.bac.genus)
View(df.bac.genus)
df.bac.genus %>%
group_by(Treatment, Genus) %>%
summarise(sum(Abundance))
df.bac.genus %>%
group_by(Treatment, Genus) %>%
summarise(mean(Abundance))
###convert genus to character vector from a factor
df.bac.genus$Genus <- as.character(df.bac.genus$Genus)
###group dataframe by Phylum, calculate median rel. abundance
mean.relabund.genus <- df.bac.genus[, mean:=mean(Abundance), by ="Genus"]
View(mean.relabund.genus)
mean.relabund.genus %>%
group_by(Treatment, Genus) %>%
summarise(mean)
mean.relabund.genus %>%
group_by(Treatment, Genus) %>%
summarise(mean(mean))
0.909*100
test=mean.relabund.genus %>%
group_by(Treatment, Genus) %>%
summarise(mean(mean))
View(test)
psmelt(bac.ra)
###create dataframe from phyloseq object
df.bac.genus <- data.table(psmelt(bac.ra))
View(df.bac.genus)
##checking the total genus abundance per sample
tot.genus.abundance <- df.bac.genus %>%
group_by(Sample) %>%
summarise(tot.abund=sum(Abundance))
tot.genus.abundance
df.bac.genus %>%
group_by(Sample, Genus) %>%
summarise(sum(Abundance))
tes= df.bac.genus %>%
group_by(Sample, Genus) %>%
summarise(sum(Abundance))
View(tes)
mean.genusrelabund.persample= df.bac.genus %>%
group_by(Sample, Genus) %>%
summarise(sum(Abundance))
View(mean.relabund.genus)
View(mean.relabund.genus)
mean.genusrelabund.persample= df.bac.genus %>%
group_by(Sample, Genus) %>%
summarise(ra=sum(Abundance))
View(mean.genusrelabund.persample)
mean.genusrelabund.persample= df.bac.genus %>%
group_by(Sample, Genus) %>%
summarise(ra=sum(Abundance))
View(mean.genusrelabund.persample)
mean.genusrelabund.persample %>%
group_by(Sample) %>%
summarise(sum(ra))
9.998204e-01*100
mean.genusrelabund.persample= df.bac.genus %>%
group_by(Sample, Treatment, Genus) %>%
summarise(ra=sum(Abundance))
mean.genusrelabund.pertreat= df.bac.genus %>%
group_by(Treatment, Genus) %>%
summarise(ra=sum(Abundance))
View(mean.genusrelabund.pertreat)
7.998743e+00*100
mean.genusrelabund.pertreat= df.bac.genus %>%
group_by(Treatment, Genus) %>%
summarise(ra=mean(Abundance))
9.998429e-01*100
mean.genusrelabund.persample %>%
group_by() %>%
summarise(sum(ra))
mean.genusrelabund.persample %>%
group_by(Sample) %>%
summarise(sum(ra))
mean.genusrelabund.pertreat %>%
group_by(Treatment) %>%
summarise(sum(ra))
tes = df.bac.genus %>%
group_by(Sample, Treatment, Genus) %>%
summarise(ra=mean(Abundance))
View(tes)
View(mean.genusrelabund.persample)
View(mean.genusrelabund.pertreat)
library(vegan)
library(BiocManager)
library(vegan)
library(plyr)
library(dplyr)
library(tidyverse)
library(tidyr)
library(cowplot)
library(ggplot2)
library(reshape)
library(ggpubr)
library(car)
library(agricolae)
library(multcompView)
library(grid)
library(gridExtra)
library(sjmisc)
library(sjPlot)
library(MASS)
library(FSA)
library(rcompanion)
library(onewaytests)
library(ggsignif)
library(PerformanceAnalytics)
library(gvlma)
library(userfriendlyscience)
library(ggpmisc)
library(tibble)
vegan
citation("vegan")
vegan::version
#################################### newseedtest_patdata #####################################
# Date: November 22nd 2019
# By : AF. Bintarti
# INSTALL PACKAGES
install.packages(c('vegan', 'tidyverse'))
install.packages(c("vegan", "tidyverse"))
library(vegan)
library(plyr)
library(dplyr)
library(tidyverse)
citation("vegan")
help("citation")
library(BiocManager)
library(vegan)
library(plyr)
library(dplyr)
library(tidyverse)
library(tidyr)
library(cowplot)
install.packages("vegan")
