legend.title = element_text(size=11, face = "bold"),
panel.grid = element_blank(),
panel.background = element_blank(),
strip.text.x = element_text(size = 12, face = "bold"),
panel.border = element_rect(colour = "black", fill = NA,size = 0.2))+
#facet_grid(~plant, switch = "x", scales = "free_x")+
guides(fill=guide_legend(nrow=2,byrow=TRUE))
plot.chlo
# merge the taxonomy with otu table
head(taxonomy.unfil)
taxonomy.unfil <- rownames_to_column(taxonomy.unfil, var = "OTUID")
head(otu.unfil)
otu.unfil <- rownames_to_column(otu.unfil, var = "OTUID")
otu.unfil.tax <- merge(otu.unfil, taxonomy.unfil, by="OTUID")
dim(otu.tax.unfil)
dim(otu.unfil.tax)
otu.unfil.tax
#select only the otu table and "Order"  & "Family"
colnames(otu.unfil.tax)
otu.unfil.tax.ed <- otu.unfil.tax[,c(1:25,29,30)]
colnames(otu.unfil.tax.ed)
otu.unfil.tax.ed <- otu.unfil.tax[,c(1:26,29,30)]
colnames(otu.unfil.tax.ed)
#edit the taxonomy
otu.unfil.tax.ed1 <- otu.unfil.tax.ed %>%
mutate(Taxonomy = case_when(Order == "Chloroplast" ~ 'Chloroplast',
Family == "Mitochondria" ~ 'Mitochondria',
TRUE ~ 'Bacteria/archaea')) %>%
mutate(Domain = case_when(Order == "Chloroplast" ~ 'Plant',
Family == "Mitochondria" ~ 'Plant',
TRUE ~ 'Bacteria/archaea'))
View(otu.unfil.tax.ed1)
tail(otu.unfil.tax.ed1)
tail(otu.unfil.tax.ed1)
colnames(otu.unfil.tax.ed1)
View(otu.unfil.tax.ed1)
otu.unfil.tax.ed2 <- otu.unfil.tax.ed1[,c(1:26,29)]
colnames(otu.tax.unfil.ed2)
colnames(otu.unfil.tax.ed2)
tail(otu.unfil.tax.ed2)
long.dat <- gather(otu.unfil.tax.ed2, Sample, Read, C1:N8, factor_key = T)
long.dat
df.unfil <- long.dat %>%
group_by(Sample, Domain) %>%
summarize(read.number = sum(Read))
df.unfil1 <- df.unfil %>%
group_by(Sample) %>%
mutate(percent= prop.table(read.number) * 100)
View(df.unfil1)
with(df.unfil1, sum(percent[Sample ==  "C1"]))
library(ggbeeswarm)
plot.unfil.king <- ggplot(df.unfil1, aes(x=Domain, y=percent, fill=Domain))+
geom_violin(trim = F, scale="width") +
#geom_beeswarm(dodge.width = 1, alpha = 0.3)+
scale_fill_manual(labels = c("Bacteria/archaea","Plant"),values=c("#88CCEE", "#117733"))+
geom_jitter(position = position_jitter(width = 0.1, height = 0, seed=13), alpha=0.3)+
theme_bw()+
expand_limits(x = 0, y = 0)+
#geom_text(data=sum_rich_plant_new, aes(x=Plant,y=2+max.rich,label=Letter), vjust=0)+
labs(title = "A")+
ylab("Read Proportion (%)")+
theme(legend.position="none",
#axis.text.x=element_blank(),
#axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text= element_text(size = 14),
strip.text = element_text(size=18, face = 'bold'),
plot.title = element_text(size = 14, face = 'bold'),
#axis.title.y=element_text(size=13,face="bold"),
axis.title.y = element_markdown(size=15,face="bold"),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
#plot.margin = unit(c(0, 0, 0, 0), "cm"))
stat_summary(fun="median",geom="point", size=7, color="red", shape=95)
library(ggplot2)
plot.unfil.king <- ggplot(df.unfil1, aes(x=Domain, y=percent, fill=Domain))+
geom_violin(trim = F, scale="width") +
#geom_beeswarm(dodge.width = 1, alpha = 0.3)+
scale_fill_manual(labels = c("Bacteria/archaea","Plant"),values=c("#88CCEE", "#117733"))+
geom_jitter(position = position_jitter(width = 0.1, height = 0, seed=13), alpha=0.3)+
theme_bw()+
expand_limits(x = 0, y = 0)+
#geom_text(data=sum_rich_plant_new, aes(x=Plant,y=2+max.rich,label=Letter), vjust=0)+
labs(title = "A")+
ylab("Read Proportion (%)")+
theme(legend.position="none",
#axis.text.x=element_blank(),
#axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text= element_text(size = 14),
strip.text = element_text(size=18, face = 'bold'),
plot.title = element_text(size = 14, face = 'bold'),
#axis.title.y=element_text(size=13,face="bold"),
axis.title.y = element_markdown(size=15,face="bold"),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
#plot.margin = unit(c(0, 0, 0, 0), "cm"))
stat_summary(fun="median",geom="point", size=7, color="red", shape=95)
library(ggtext)
plot.unfil.king <- ggplot(df.unfil1, aes(x=Domain, y=percent, fill=Domain))+
geom_violin(trim = F, scale="width") +
#geom_beeswarm(dodge.width = 1, alpha = 0.3)+
scale_fill_manual(labels = c("Bacteria/archaea","Plant"),values=c("#88CCEE", "#117733"))+
geom_jitter(position = position_jitter(width = 0.1, height = 0, seed=13), alpha=0.3)+
theme_bw()+
expand_limits(x = 0, y = 0)+
#geom_text(data=sum_rich_plant_new, aes(x=Plant,y=2+max.rich,label=Letter), vjust=0)+
labs(title = "A")+
ylab("Read Proportion (%)")+
theme(legend.position="none",
#axis.text.x=element_blank(),
#axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text= element_text(size = 14),
strip.text = element_text(size=18, face = 'bold'),
plot.title = element_text(size = 14, face = 'bold'),
#axis.title.y=element_text(size=13,face="bold"),
axis.title.y = element_markdown(size=15,face="bold"),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
#plot.margin = unit(c(0, 0, 0, 0), "cm"))
stat_summary(fun="median",geom="point", size=7, color="red", shape=95)
plot.unfil.king
View(df.unfil1)
9.999110e+01*1
8.903530e-03*1
1.000000e+02*1
View(df.unfil)
View(df.unfil1)
8.476013e-03*100
8.476013e-03*1
8.903530e-03+6.677350e-03+4.132744e-03+1.030881e-02+5.874474e-03+2.702898e-03+8.391675e-03+1.395927e-03+5.532503e-03+6.301991e-03+3.871392e-03+1.179941e-02+8.476013e-03
0.08436872/24
5.532503e-038*1
5.532503e-03*1
100-99.9
8.903530e-03*1
100-0.00890353
100-99.9911
100-99.99
100-9.998969e+01
0.1-0.03
0.1/2
# SET THE WORKING DIRECTORY
rm(list=ls())
set.seed(3)
setwd('/Users/arifinabintarti/Documents/BioRxiv_Seed_Microbiome_2020/ITS/')
wd <- print(getwd())
otu.its.pat <- read.table('04022020_pat.OpenRef_OTU_table_rare.txt', sep='\t', header=T, row.names = 1)
colnames(otu.its.pat)
#write.csv(taxonomy.rare.pat, file = "taxonomy.rare.pat.csv")
dim(otu.its.pat)
plant.its.data = read.csv("planthealthpat.its.csv", header=T)
# checking the otu table
sort(colSums(otu.its.pat, na.rm = FALSE, dims = 1), decreasing = TRUE)
head(sort(rowSums(otu.its.pat, na.rm = FALSE, dims = 1), decreasing = FALSE))
rarecurve(t(otu.its.pat), step = 20, col = "blue", cex = 0.6) #produce the rarefaction curve
otu.rare.its <- as.data.frame(otu.its.pat)
# load the map
map.pat.its <- plant.its.data
s<- specnumber(otu.rare.its, MARGIN = 2) # richness
rich <- as.data.frame(s)
h <- diversity(t(otu.rare.its), index = 'shannon') # Shannon index
shannon <- as.data.frame(h)
j <- h/log(s) # Pielou's evenness
pie <- as.data.frame(j)
map.pat.its$Richness <- s
map.pat.its$Shannon <- h
map.pat.its$Pielou <- j
map.pat.its
# SET THE WORKING DIRECTORY
rm(list=ls())
set.seed(3)
setwd('/Users/arifinabintarti/Documents/BioRxiv_Seed_Microbiome_2020/ITS/')
#read the unfiltered otu table
otu.unfil.its <- read.table('04022020_pat.OpenRef_OTU_table.txt', sep='\t', header=T, row.names = 1)
otu.unfil.its
#read taxonomy
taxonomy.unfil.its = read.csv("consensus_taxonomy_its.csv", header=T)
#read taxonomy
taxonomy.unfil.its = read.txt("consensus_taxonomy_its.txt", header=T)
#read taxonomy
taxonomy.unfil.its = read.csv("consensus_taxonomy.csv", header=T)
sort(rowSums(otu.unfil.its, na.rm = FALSE, dims = 1), decreasing = F)
#read taxonomy
taxonomy.unfil.its = read.csv("consensus_taxonomy.csv", header=T)
rownames(taxonomy.unfil.its) <- rownames(otu.unfil.its)
otu.unfil.its
View(otu.unfil.its)
View(taxonomy.unfil.its)
# merge the taxonomy with otu table
head(taxonomy.unfil.its)
head(otu.unfil.its)
otu.unfil.its <- rownames_to_column(otu.unfil.its, var = "OTU_ID")
#read taxonomy
taxonomy.unfil.its = read.csv("consensus_taxonomy.csv", header=T)
# merge the taxonomy with otu table
head(taxonomy.unfil.its)
taxonomy.unfil.its <- rownames_to_column(taxonomy.unfil.its, var = "OTU_ID")
#read taxonomy
taxonomy.unfil.its = read.csv("consensus_taxonomy.csv", header=T)
# merge the taxonomy with otu table
head(taxonomy.unfil.its)
head(otu.unfil.its)
otu.unfil.its.tax <- merge(otu.unfil.its, taxonomy.unfil.its, by="OTU_ID")
dim(otu.unfil.its.tax)
#select only the otu table and "Order"  & "Family"
colnames(otu.unfil.its.tax)
otu.unfil.its.tax.ed <- otu.unfil.its.tax[,c(1:25)]
colnames(otu.unfil.its.tax.ed)
#edit the taxonomy
otu.unfil.its.tax.ed1 <- otu.unfil.its.tax.ed %>%
mutate(Domain = case_when(Phylum == "Cercozoa" ~ 'Cercozoa',
TRUE ~ 'Fungi'))
tail(otu.unfil.its.tax.ed1)
colnames(otu.unfil.its.tax.ed1)
View(otu.unfil.its.tax.ed1)
otu.unfil.its.tax.ed2 <- otu.unfil.its.tax.ed1[,c(1:24)]
colnames(otu.unfil.its.tax.ed2)
tail(otu.unfil.its.tax.ed2)
long.dat.its <- gather(otu.unfil.its.tax.ed2, Sample, Read, C1:N7, factor_key = T)
df.unfil.its <- long.dat.its %>%
group_by(Sample, Domain) %>%
summarize(read.number = sum(Read))
df.unfil1.its <- df.unfil.its %>%
group_by(Sample) %>%
mutate(percent= prop.table(read.number) * 100)
with(df.unfil1.its, sum(percent[Sample ==  "C1"]))
plot.unfil.king.its <- ggplot(df.unfil1.its, aes(x=Domain, y=percent, fill=Domain))+
geom_violin(trim = F, scale="width") +
#geom_beeswarm(dodge.width = 1, alpha = 0.3)+
scale_fill_manual(labels = c("Fungi","Cercozoa"),values=c("#88CCEE", "#117733"))+
geom_jitter(position = position_jitter(width = 0.1, height = 0, seed=13), alpha=0.3)+
theme_bw()+
expand_limits(x = 0, y = 0)+
#geom_text(data=sum_rich_plant_new, aes(x=Plant,y=2+max.rich,label=Letter), vjust=0)+
labs(title = "A")+
ylab("Read Proportion (%)")+
theme(legend.position="none",
#axis.text.x=element_blank(),
#axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text= element_text(size = 14),
strip.text = element_text(size=18, face = 'bold'),
plot.title = element_text(size = 14, face = 'bold'),
#axis.title.y=element_text(size=13,face="bold"),
axis.title.y = element_markdown(size=15,face="bold"),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
#plot.margin = unit(c(0, 0, 0, 0), "cm"))
stat_summary(fun="median",geom="point", size=7, color="red", shape=95)
plot.unfil.king.its
View(df.unfil1.its)
with(df.unfil1.its, sum(percent[Domain ==  "Fungi"]))
2199.93/22
with(df.unfil1.its, sum(percent[Domain ==  "Cercozoa"]))
0.06992085/22
0.00317822+99.99682
with(df.unfil1, sum(percent[Sample ==  "C1"]))
df.unfil <- long.dat %>%
group_by(Sample, Domain) %>%
summarize(read.number = sum(Read))
setwd('/Users/arifinabintarti/Documents/BioRxiv_Seed_Microbiome_2020/16S/')
#read the unfiltered otu table
otu.unfil <- read.table('OTU_table_tax.txt', sep='\t', header=T, row.names = 1)
otu.unfil
tax.unfil <- otu.unfil[,'taxonomy']
tax.unfil
#write.csv(tax.unfil, file = "taxonomy.unfil.csv")
dim(otu.unfil)
otu.unfil <- otu.unfil[,-25]
dim(otu.unfil)
sort(rowSums(otu.unfil, na.rm = FALSE, dims = 1), decreasing = F)
#read taxonomy
taxonomy.unfil = read.csv("tax.unfil.ed.csv", header=T)
rownames(taxonomy.unfil) <- rownames(otu.unfil)
dim(taxonomy.unfil)
#read the metadata
map.pat
# merge the taxonomy with otu table
head(taxonomy.unfil)
taxonomy.unfil <- rownames_to_column(taxonomy.unfil, var = "OTUID")
head(otu.unfil)
otu.unfil <- rownames_to_column(otu.unfil, var = "OTUID")
otu.unfil.tax <- merge(otu.unfil, taxonomy.unfil, by="OTUID")
dim(otu.unfil.tax)
#select only the otu table and "Order"  & "Family"
colnames(otu.unfil.tax)
otu.unfil.tax.ed <- otu.unfil.tax[,c(1:26,29,30)]
colnames(otu.unfil.tax.ed)
#edit the taxonomy
otu.unfil.tax.ed1 <- otu.unfil.tax.ed %>%
mutate(Taxonomy = case_when(Order == "Chloroplast" ~ 'Chloroplast',
Family == "Mitochondria" ~ 'Mitochondria',
TRUE ~ 'Bacteria/archaea')) %>%
mutate(Domain = case_when(Order == "Chloroplast" ~ 'Plant',
Family == "Mitochondria" ~ 'Plant',
TRUE ~ 'Bacteria/archaea'))
tail(otu.unfil.tax.ed1)
colnames(otu.unfil.tax.ed1)
otu.unfil.tax.ed2 <- otu.unfil.tax.ed1[,c(1:26,29)]
colnames(otu.unfil.tax.ed2)
tail(otu.unfil.tax.ed2)
long.dat <- gather(otu.unfil.tax.ed2, Sample, Read, C1:N8, factor_key = T)
long.dat
df.unfil <- long.dat %>%
group_by(Sample, Domain) %>%
summarize(read.number = sum(Read))
df.unfil1 <- df.unfil %>%
group_by(Sample) %>%
mutate(percent= prop.table(read.number) * 100)
with(df.unfil1, sum(percent[Sample ==  "C1"]))
View(df.unfil1)
with(df.unfil1, sum(percent[Domain ==  "Plant"]))
0.08436871/24
# SET THE WORKING DIRECTORY
rm(list=ls())
set.seed(3)
setwd('/Users/arifinabintarti/Documents/BioRxiv_Seed_Microbiome_2020/16S/')
wd <- print(getwd())
otu.rare.pat <- read.table('single_rare.txt', sep='\t', header=T, row.names = 1)
colnames(otu.rare.pat)
taxonomy.rare.pat <- otu.rare.pat[,'taxonomy']
str(taxonomy.rare.pat)
#write.csv(taxonomy.rare.pat, file = "taxonomy.rare.pat.csv")
dim(otu.rare.pat)
otu.rare.pat <- otu.rare.pat[,-25]
dim(otu.rare.pat)
plant.data = read.csv("planthealthpat.csv", header=T)
map.pat <- plant.data
#checking the colsum and rowsum and produce rarefaction curve
sort(colSums(otu.rare.pat, na.rm = FALSE, dims = 1), decreasing = TRUE)
head(sort(rowSums(otu.rare.pat, na.rm = FALSE, dims = 1), decreasing = FALSE))
rarecurve(t(otu.rare.pat), step = 20, col = "blue", cex = 0.6) #produce the rarefaction curve
s <- specnumber(otu.rare.pat, MARGIN = 2) # richness
rich <- as.data.frame(s)
h <- diversity(t(otu.rare.pat), index = 'shannon') # Shannon index
shannon <- as.data.frame(h)
j <- h/log(s) # Pielou's evenness
pie <- as.data.frame(j)
#calculate alpha diversity
otu.rare.pat <- as.data.frame(otu.rare.pat)
map.pat <- plant.data
map.pat$Richness <- s
map.pat$Shannon <- h
map.pat$Pielou <- j
map.pat
#add Faith's PD index
pd.index <- read.table('PD_whole_tree.txt', sep='\t', header=T, row.names = 1)
pd.index <- rownames_to_column(pd.index, "Plant.Name")
#join aith's PD index to the map
map.pat <- merge(map.pat, pd.index, by="Plant.Name", all = T)
#1. Compare bacterial and archaeal richness among different treatments
rich.pat <- aov(map.pat$Richness ~ Treatment, data = map.pat)
summary(rich.pat) #F=3.074, p-val=0.0675
# testing assumptions
# Generate residual and predicted values
rich.pat.resids <- residuals(rich.pat)
rich.pat.preds <- predict(rich.pat)
# Perform a Shapiro-Wilk test for normality of residuals
shapiro.test(rich.pat.resids) # p-value = 0.048, data errors are not normally distributed
# Perform Levene's Test for homogenity of variances
leveneTest(Richness ~ Treatment, data=map.pat, na.action=na.exclude) # p-val=0.006 variances among group are not homogenous
### RESULT: The data does not meet the normality assumption, thus I use Kruskal-Wallis test instead.
kruskal.test(Richness ~ Treatment, data=map.pat) # Kruskal-Wallis chi-squared = 3.8317, df = 2, p-value = 0.1472 no signif differences
# create new level order and label
level_order <- c("Control","Water withholding","Nutrient addition")
label <- c("Control","Water\nwithholding","Nutrient\naddition")
#do plot
rich<-ggplot(map.pat, aes(x=factor(Treatment, level=level_order), y=Richness, fill=Treatment)) +
geom_boxplot()+
scale_fill_manual(labels = c("Control", "Water withholding", "Nutrient addition"),values=c('#4363d8', '#008080', 'tomato'))+
geom_jitter(position = position_jitter(width = 0.1, height = 0, seed=13), alpha=0.5)+
theme_bw()+
labs(title = "A. Bacteria/archaea")+
expand_limits(x = 0, y = 0)+
scale_x_discrete(labels= label)+
theme(legend.position="left",
plot.background = element_blank(),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = 15, face="bold"),
axis.text.y=element_text(size=14),
axis.text.x=element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.title=element_text(size=14,face="bold"),
legend.text=element_text(size=14),
legend.title = element_text(size = 15),
legend.spacing.x = unit(0.05, 'cm'))
rich
#checking the colsum and rowsum and produce rarefaction curve
sort(colSums(otu.rare.pat, na.rm = FALSE, dims = 1), decreasing = TRUE)
View(map.pat)
colnames(otu.rare.pat)
otuCD <- data.frame(otu.rare.pat[,c(1:16)])
colnames(otuCD)
##calculate the occupancy of each otu across control and water withholding plants
otuCD.PA <- 1*((otuCD>0)==1)
View(otuCD)
sort(colSums(otuCD, na.rm = FALSE, dims = 1), decreasing = TRUE)
sort(rowSums(otuCD, na.rm = FALSE, dims = 1), decreasing = TRUE)
##calculate the occupancy of each otu across control and water withholding plants
otuCD.PA <- 1*((otuCD>0)==1)
View(otuCD.PA)
View(otuCD)
ncol(otuCD.PA)
Occ.CD <- rowSums(otuCD.PA)/ncol(otuCD.PA)
df.Occ.CD <- as.data.frame(Occ.CD)
df.Occ.CD <- rownames_to_column(df.Occ.CD, var = "OTUID")
taxonomy.rare.pat = read.csv("taxa.rare.edit2.csv", header=T)
head(taxonomy.rare.pat)
rownames(taxonomy.rare.pat) <- rownames(otu.rare.pat)
head(taxonomy.rare.pat)
taxonomy.rare.pat <- rownames_to_column(taxonomy.rare.pat, var = "OTUID")
head(taxonomy.rare.pat)
tax <- rownames_to_column(taxonomy.rare.pat, var = "OTUID")
head(tax)
taxonomy.rare.pat = read.csv("taxa.rare.edit2.csv", header=T)
tax <- rownames_to_column(taxonomy.rare.pat, var = "OTUID")
head(tax)
taxonomy.rare.pat = read.csv("taxa.rare.edit2.csv", header=T)
#View(taxonomy.rare.pat)
dim(taxonomy.rare.pat)
rownames(taxonomy.rare.pat) <- rownames(otu.rare.pat)
tax <- rownames_to_column(taxonomy.rare.pat, var = "OTUID")
head(tax)
df.Occ.CD.tax <- merge(df.Occ.CD, tax, by="OTUID")
sort.df.Occ.CD.tax <- df.Occ.CD.tax[order(df.Occ.CD.tax$Occ.CD, decreasing = TRUE),]
write.csv(sort.df.Occ.CD.tax, file = "sort.occ.CD.csv")
colnames(otu.rare.pat)
otuCN <- data.frame(otu.rare.pat[,c(1:8,17:24)])
colnames(otuCN)
sort(rowSums(otuCN, na.rm = FALSE, dims = 1), decreasing = TRUE)
##calculate the occupancy of each otu across control and water withholding plants
otuCN.PA <- 1*((otuCN>0)==1)
Occ.CN <- rowSums(otuCN.PA)/ncol(otuCN.PA)
df.Occ.CN <- as.data.frame(Occ.CN)
df.Occ.CN <- rownames_to_column(df.Occ.CN, var = "OTUID")
head(taxonomy.rare.pat)
head(tax)
df.Occ.CN.tax <- merge(df.Occ.CN, tax, by="OTUID")
sort.df.Occ.CN.tax <- df.Occ.CN.tax[order(df.Occ.CN.tax$Occ.CN, decreasing = TRUE),]
write.csv(sort.df.Occ.CN.tax, file = "sort.occ.CN.csv")
set.seed(3)
setwd('/Users/arifinabintarti/Documents/BioRxiv_Seed_Microbiome_2020/ITS/')
wd <- print(getwd())
otu.its.pat <- read.table('04022020_pat.OpenRef_OTU_table_rare.txt', sep='\t', header=T, row.names = 1)
colnames(otu.its.pat)
#write.csv(taxonomy.rare.pat, file = "taxonomy.rare.pat.csv")
dim(otu.its.pat)
plant.its.data = read.csv("planthealthpat.its.csv", header=T)
# checking the otu table
sort(colSums(otu.its.pat, na.rm = FALSE, dims = 1), decreasing = TRUE)
head(sort(rowSums(otu.its.pat, na.rm = FALSE, dims = 1), decreasing = FALSE))
rarecurve(t(otu.its.pat), step = 20, col = "blue", cex = 0.6) #produce the rarefaction curve
# load the map
map.pat.its <- plant.its.data
taxonomy.its.pat = read.csv("consensus_taxonomy_its_filt.csv", header=T)
otu.its.pat <- rownames_to_column(otu.its.pat, var = "OTU_ID")
# merge otu table with taxonomy
otu.tax.its <- merge(otu.its.pat, taxonomy.its.pat, by = "OTU_ID")
dim(otu.tax.its)
# separate both otu table and taxonomy
otu.its.filt <- otu.tax.its[,1:23]
dim(otu.its.filt)
tax.its.filt <- otu.tax.its[,c("OTU_ID", "Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")]
dim(tax.its.filt)
colnames(otu.its.filt)
otuCD.its <- data.frame(otu.its.filt[,c(1:16)])
colnames(otuCD.its)
sort(rowSums(otuCD.its, na.rm = FALSE, dims = 1), decreasing = TRUE)
View(otuCD.its)
View(otuCD.its)
##calculate the occupancy of each otu across control and water withholding plants
otuCD.its.PA <- 1*((otuCD.its>0)==1)
View(otuCD.its.PA)
### Occupancy across control and water withholding plants
colnames(otu.its.filt)
colnames(otuCD.its)
otuCD.its <- column_to_rownames(otuCD.its, var = "OTU_ID")
colnames(otuCD.its)
View(otuCD.its)
##calculate the occupancy of each otu across control and water withholding plants
otuCD.its.PA <- 1*((otuCD.its>0)==1)
Occ.CD.its <- rowSums(otuCD.its.PA)/ncol(otuCD.its.PA)
ncol(otuCD.its.PA)
df.Occ.CD.its <- rownames_to_column(df.Occ.CD.its, var = "OTU_ID")
df.Occ.CD.its <- as.data.frame(Occ.CD.its)
df.Occ.CD.its <- rownames_to_column(df.Occ.CD.its, var = "OTU_ID")
head(tax.its.filt)
df.Occ.CD.its.tax <- merge(df.Occ.CD.its, tax.its.filt, by="OTU_ID")
sort.df.Occ.CD.its.tax <- df.Occ.CD.its.tax[order(df.Occ.CD.its.tax$Occ.CD.its, decreasing = TRUE),]
write.csv(sort.df.Occ.CD.its.tax, file = "sort.occ.CD.its.csv")
colnames(otu.its.filt)
otuCN.its <- data.frame(otu.its.filt[,c(1:9,17:23)])
colnames(otuCN.its)
otuCN.its <- column_to_rownames(otuCN.its, var = "OTU_ID")
##calculate the occupancy of each otu across control and water withholding plants
otuCN.its.PA <- 1*((otuCN.its>0)==1)
Occ.CN.its <- rowSums(otuCN.its.PA)/ncol(otuCN.its.PA)
df.Occ.CN.its <- as.data.frame(Occ.CN.its)
df.Occ.CN.its <- rownames_to_column(df.Occ.CN.its, var = "OTU_ID")
head(tax.its.filt)
df.Occ.CN.its.tax <- merge(df.Occ.CN.its, tax.its.filt, by="OTU_ID")
sort.df.Occ.CN.its.tax <- df.Occ.CN.its.tax[order(df.Occ.CN.its.tax$Occ.CN.its, decreasing = TRUE),]
write.csv(sort.df.Occ.CN.its.tax, file = "sort.occ.CN.its.csv")
